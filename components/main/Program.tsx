"use client";
import { Fragment, useState } from "react";
import Image from "next/image";

export default function Program() {
  const [activeDay, setActiveDay] = useState<1 | 2>(1);

  const program: Record<
    1 | 2,
    Array<{ id: string; img: string; text: string }>
  > = {
    1: [
      {
        id: "01",
        img: "/default-wide.png",
        text: "5 –ø—Ä–æ–≤—ñ–¥–Ω–∏—Ö —Å–ø—ñ–∫–µ—Ä—ñ–≤ ‚Äî –µ–∫—Å–ø–µ—Ä—Ç–∏ –∞–≥—Ä–æ—Å—Ñ–µ—Ä–∏, —è–∫—ñ –ø–æ–¥—ñ–ª—è—Ç—å—Å—è –ø—Ä–∞–∫—Ç–∏—á–Ω–∏–º–∏ –∫–µ–π—Å–∞–º–∏ —Ç–∞ –Ω–æ–≤—ñ—Ç–Ω—ñ–º–∏ —Ä—ñ—à–µ–Ω–Ω—è–º–∏ —É —Å—Ñ–µ—Ä—ñ —Å–º–∞—Ä—Ç-–∞–≥—Ä–æ, —Ü–∏—Ñ—Ä–æ–≤—ñ–∑–∞—Ü—ñ—ó —Ç–∞ —Å—Ç–∞–ª–æ–≥–æ —Ä–æ–∑–≤–∏—Ç–∫—É.",
      },
      {
        id: "02",
        img: "/default-wide.png",
        text: "–ü–∞–Ω–µ–ª—å–Ω–∞ –¥–∏—Å–∫—É—Å—ñ—è ¬´–ê–≥—Ä–æ—ñ–Ω–Ω–æ–≤–∞—Ü—ñ—ó 2025¬ª ‚Äî —è–∫ —à—Ç—É—á–Ω–∏–π —ñ–Ω—Ç–µ–ª–µ–∫—Ç, –¥—Ä–æ–Ω–∏ —Ç–∞ big data –∑–º—ñ–Ω—é—é—Ç—å –ø—ñ–¥—Ö–æ–¥–∏ –¥–æ —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –≥–æ—Å–ø–æ–¥–∞—Ä—Å—Ç–≤–∞–º–∏.",
      },
      {
        id: "03",
        img: "/default-wide.png",
        text: "Networking-—Å–µ—Å—ñ—è –∑ —ñ–Ω–≤–µ—Å—Ç–æ—Ä–∞–º–∏ —Ç–∞ —Å—Ç–∞—Ä—Ç–∞–ø–∞–º–∏ ‚Äî –º–æ–∂–ª–∏–≤—ñ—Å—Ç—å –∑–Ω–∞–π—Ç–∏ –ø–∞—Ä—Ç–Ω–µ—Ä—ñ–≤ —ñ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–∏ —Å–≤–æ—ó —ñ–¥–µ—ó.",
      },
    ],
    2: [
      {
        id: "04",
        img: "/default-wide.png",
        text: "–ü—Ä–∞–∫—Ç–∏—á–Ω–∏–π –≤–æ—Ä–∫—à–æ–ø –∑ —Ç–æ—á–Ω–æ–≥–æ –∑–µ–º–ª–µ—Ä–æ–±—Å—Ç–≤–∞ ‚Äî –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è –æ–±–ª–∞–¥–Ω–∞–Ω–Ω—è —Ç–∞ –ø—Ä–æ–≥—Ä–∞–º–Ω–∏—Ö —Ä—ñ—à–µ–Ω—å.",
      },
      {
        id: "05",
        img: "/default-wide.png",
        text: "–ï–∫—Å–ø–æ–∑–∏—Ü—ñ–π–Ω–∞ –∑–æ–Ω–∞: –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è –Ω–æ–≤—ñ—Ç–Ω—ñ—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ–π, –∞–≥—Ä–æ–¥—Ä–æ–Ω—ñ–≤, IoT —Ç–∞ —Ä—ñ—à–µ–Ω—å –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü—ñ—ó.",
      },
      {
        id: "06",
        img: "/default-wide.png",
        text: "–ó–∞–∫–ª—é—á–Ω–∞ –¥–∏—Å–∫—É—Å—ñ—è: ‚Äú–ú–∞–π–±—É—Ç–Ω—î —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ–≥–æ –∞–≥—Ä–æ–±—ñ–∑–Ω–µ—Å—É ‚Äî —Å—Ç–∞–ª—ñ—Å—Ç—å, —ñ–Ω–Ω–æ–≤–∞—Ü—ñ—ó, –æ—Å–≤—ñ—Ç–∞.‚Äù",
      },
    ],
  };

  return (
    <section
      id="program"
      className="bg-white py-16 px-4 md:px-10 rounded-2xl relative"
    >
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className="flex flex-col md:flex-row justify-between items-start md:items-center mb-12">
        <h2 className="font-extrabold text-5xl md:text-7xl uppercase text-gray-900 tracking-tight">
          üìÖ –ü—Ä–æ–≥—Ä–∞–º–∞
        </h2>
        <div className="mt-6 md:mt-0 md:w-1/3 text-left md:text-right">
          <h3 className="font-bold text-2xl uppercase text-green-800 mb-2">
            NOVA AGRO FORUM 2025
          </h3>
          <p className="text-gray-700 text-sm md:text-base leading-relaxed">
            –ù–∞ –≤–∞—Å —á–µ–∫–∞—Ç–∏–º–µ –Ω–∞—Å–∏—á–µ–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–∞ –¥–ª—è –æ–±–º—ñ–Ω—É –∑–Ω–∞–Ω–Ω—è–º–∏, –Ω–∞—Ç—Ö–Ω–µ–Ω–Ω—è —Ç–∞
            —è–∫—ñ—Å–Ω–æ–≥–æ –Ω–µ—Ç–≤–æ—Ä–∫—ñ–Ω–≥—É.
          </p>
        </div>
      </div>

      {/* –í–∫–ª–∞–¥–∫–∏ –ø–æ –¥–Ω—è—Ö */}
      <div className="flex justify-center gap-3 mb-10 flex-wrap">
        {[1, 2].map((day) => (
          <button
            key={day}
            onClick={() => setActiveDay(day as 1 | 2)}
            className={`px-6 py-2 rounded-full font-semibold border transition-all shadow-sm ${
              activeDay === day
                ? "bg-green-700 text-white border-green-700 shadow-md scale-105"
                : "bg-white text-green-700 border-green-700 hover:bg-green-700 hover:text-white"
            }`}
          >
            –î–µ–Ω—å {day}
          </button>
        ))}
      </div>

      {/* –°—ñ—Ç–∫–∞ –¥–ª—è –¥–µ—Å–∫—Ç–æ–ø—É */}
      <div className="hidden md:grid md:grid-cols-[2fr_0.7fr_2fr] border-y border-gray-200">
        {program[activeDay].map((item, index) => (
          <Fragment key={index}>
            {index % 2 === 0 ? (
              <>
                <div className="relative min-h-[180px] border-b border-gray-200">
                  <Image
                    src={item.img}
                    alt={item.text.slice(0, 20)}
                    fill
                    className="object-cover rounded-lg"
                  />
                </div>
                <span className="text-yellow-500 text-8xl flex justify-center items-center border-x border-b border-green-800 font-extrabold bg-white">
                  {item.id}
                </span>
                <div className="text-gray-700 border-b border-gray-200 p-8 flex items-center bg-white">
                  <p className="text-lg leading-relaxed">{item.text}</p>
                </div>
              </>
            ) : (
              <>
                <div className="text-gray-700 border-b border-gray-200 p-8 flex items-center bg-white">
                  <p className="text-lg leading-relaxed">{item.text}</p>
                </div>
                <span className="text-yellow-500 text-8xl flex justify-center items-center border-x border-b border-green-800 font-extrabold bg-white">
                  {item.id}
                </span>
                <div className="relative min-h-[180px] border-b border-gray-200">
                  <Image
                    src={item.img}
                    alt={item.text.slice(0, 20)}
                    fill
                    className="object-cover rounded-lg"
                  />
                </div>
              </>
            )}
          </Fragment>
        ))}
      </div>

      {/* –ú–æ–±—ñ–ª—å–Ω–∞ –≤–µ—Ä—Å—ñ—è */}
      <div className="md:hidden flex flex-col gap-6">
        {program[activeDay].map((item) => (
          <div
            key={item.id}
            className="rounded-2xl overflow-hidden shadow-md border border-gray-200 bg-linear-to-b from-white to-green-50"
          >
            <div className="relative h-48 w-full">
              <Image
                src={item.img}
                alt={item.text.slice(0, 20)}
                fill
                className="object-cover"
              />
              <div className="absolute top-3 left-3 bg-green-700 text-white text-lg font-bold rounded-full w-12 h-12 flex items-center justify-center shadow-md">
                {item.id}
              </div>
            </div>
            <div className="p-5 text-gray-700">
              <p className="text-base leading-relaxed">{item.text}</p>
            </div>
          </div>
        ))}
      </div>

      {/* –ö–Ω–æ–ø–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è PDF */}
      {/* <div className="text-center mt-12">
        <a
          href="/program-nova-agro-2025.pdf"
          download
          className="inline-flex items-center gap-3 bg-green-700 text-white px-6 py-3 rounded-full font-semibold hover:bg-green-800 transition shadow-md hover:shadow-lg"
        >
          üìÑ –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ PDF-–≤–µ—Ä—Å—ñ—é –ø—Ä–æ–≥—Ä–∞–º–∏
        </a>
      </div> */}
    </section>
  );
}
